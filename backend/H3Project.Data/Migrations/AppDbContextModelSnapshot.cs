// <auto-generated />
using System;
using H3Project.Data.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace H3Project.Data.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("GenreMovie", b =>
                {
                    b.Property<int>("GenresId")
                        .HasColumnType("int");

                    b.Property<int>("MoviesId")
                        .HasColumnType("int");

                    b.HasKey("GenresId", "MoviesId");

                    b.HasIndex("MoviesId");

                    b.ToTable("GenreMovie");

                    b.HasData(
                        new
                        {
                            GenresId = 1,
                            MoviesId = 1
                        },
                        new
                        {
                            GenresId = 2,
                            MoviesId = 1
                        },
                        new
                        {
                            GenresId = 2,
                            MoviesId = 2
                        },
                        new
                        {
                            GenresId = 3,
                            MoviesId = 3
                        });
                });

            modelBuilder.Entity("H3Project.Data.Models.Cinema", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Cinemas");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Address = "123 Movie St",
                            Name = "Grand Cinema"
                        },
                        new
                        {
                            Id = 2,
                            Address = "456 Central Ave",
                            Name = "Downtown Cinema"
                        });
                });

            modelBuilder.Entity("H3Project.Data.Models.Genre", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Genres");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Action"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Comedy"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Drama"
                        });
                });

            modelBuilder.Entity("H3Project.Data.Models.Movie", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<TimeSpan>("Duration")
                        .HasColumnType("time");

                    b.Property<DateOnly>("ReleaseDate")
                        .HasColumnType("date");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Movies");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "High-speed action",
                            Duration = new TimeSpan(0, 2, 30, 0, 0),
                            ReleaseDate = new DateOnly(2024, 1, 15),
                            Title = "Fast & Furious 10"
                        },
                        new
                        {
                            Id = 2,
                            Description = "Hilarious comedy",
                            Duration = new TimeSpan(0, 1, 45, 0, 0),
                            ReleaseDate = new DateOnly(2024, 2, 10),
                            Title = "Laugh Out Loud"
                        },
                        new
                        {
                            Id = 3,
                            Description = "Heartfelt drama",
                            Duration = new TimeSpan(0, 2, 10, 0, 0),
                            ReleaseDate = new DateOnly(2024, 3, 5),
                            Title = "Deep Emotions"
                        });
                });

            modelBuilder.Entity("H3Project.Data.Models.Schedule", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("EndTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("MovieId")
                        .HasColumnType("int");

                    b.Property<DateTime>("ShowTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("TheaterId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("MovieId");

                    b.HasIndex("TheaterId");

                    b.ToTable("Schedules");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            EndTime = new DateTime(2024, 1, 16, 20, 30, 0, 0, DateTimeKind.Unspecified),
                            MovieId = 1,
                            ShowTime = new DateTime(2024, 1, 16, 18, 0, 0, 0, DateTimeKind.Unspecified),
                            TheaterId = 1
                        },
                        new
                        {
                            Id = 2,
                            EndTime = new DateTime(2024, 2, 11, 16, 45, 0, 0, DateTimeKind.Unspecified),
                            MovieId = 2,
                            ShowTime = new DateTime(2024, 2, 11, 15, 0, 0, 0, DateTimeKind.Unspecified),
                            TheaterId = 2
                        },
                        new
                        {
                            Id = 3,
                            EndTime = new DateTime(2024, 3, 6, 22, 10, 0, 0, DateTimeKind.Unspecified),
                            MovieId = 3,
                            ShowTime = new DateTime(2024, 3, 6, 20, 0, 0, 0, DateTimeKind.Unspecified),
                            TheaterId = 3
                        });
                });

            modelBuilder.Entity("H3Project.Data.Models.Seat", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("IsAvailable")
                        .HasColumnType("bit");

                    b.Property<int>("Number")
                        .HasColumnType("int");

                    b.Property<string>("Row")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("TheaterId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("TheaterId");

                    b.HasIndex("Row", "Number", "TheaterId")
                        .IsUnique();

                    b.ToTable("Seats");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            IsAvailable = true,
                            Number = 1,
                            Row = "A",
                            TheaterId = 1
                        },
                        new
                        {
                            Id = 2,
                            IsAvailable = true,
                            Number = 2,
                            Row = "A",
                            TheaterId = 1
                        },
                        new
                        {
                            Id = 3,
                            IsAvailable = false,
                            Number = 3,
                            Row = "B",
                            TheaterId = 2
                        },
                        new
                        {
                            Id = 4,
                            IsAvailable = true,
                            Number = 4,
                            Row = "C",
                            TheaterId = 3
                        });
                });

            modelBuilder.Entity("H3Project.Data.Models.Theater", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CinemaId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CinemaId");

                    b.ToTable("Theaters");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CinemaId = 1,
                            Name = "Screen 1"
                        },
                        new
                        {
                            Id = 2,
                            CinemaId = 1,
                            Name = "Screen 2"
                        },
                        new
                        {
                            Id = 3,
                            CinemaId = 2,
                            Name = "Screen 1"
                        });
                });

            modelBuilder.Entity("H3Project.Data.Models.Ticket", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<decimal>("Price")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("PurchaseDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("ScheduleId")
                        .HasColumnType("int");

                    b.Property<int>("SeatId")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ScheduleId");

                    b.HasIndex("SeatId");

                    b.HasIndex("UserId");

                    b.ToTable("Tickets");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Price = 10.99m,
                            PurchaseDate = new DateTime(2024, 1, 15, 14, 0, 0, 0, DateTimeKind.Unspecified),
                            ScheduleId = 1,
                            SeatId = 1,
                            UserId = 2
                        },
                        new
                        {
                            Id = 2,
                            Price = 8.50m,
                            PurchaseDate = new DateTime(2024, 2, 10, 10, 0, 0, 0, DateTimeKind.Unspecified),
                            ScheduleId = 2,
                            SeatId = 3,
                            UserId = 3
                        },
                        new
                        {
                            Id = 3,
                            Price = 8.50m,
                            PurchaseDate = new DateTime(2024, 2, 10, 10, 0, 0, 0, DateTimeKind.Unspecified),
                            ScheduleId = 2,
                            SeatId = 4,
                            UserId = 3
                        });
                });

            modelBuilder.Entity("H3Project.Data.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserRoleId")
                        .HasColumnType("int");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserRoleId");

                    b.HasIndex("Username")
                        .IsUnique();

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Email = "john@example.com",
                            PasswordHash = "hashed_password_1",
                            UserRoleId = 1,
                            Username = "john_doe"
                        },
                        new
                        {
                            Id = 2,
                            Email = "jane@example.com",
                            PasswordHash = "hashed_password_2",
                            UserRoleId = 2,
                            Username = "jane_smith"
                        },
                        new
                        {
                            Id = 3,
                            Email = "alice@example.com",
                            PasswordHash = "hashed_password_3",
                            UserRoleId = 2,
                            Username = "alice_jones"
                        });
                });

            modelBuilder.Entity("H3Project.Data.Models.UserRole", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("UserRoles");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Role = "Admin"
                        },
                        new
                        {
                            Id = 2,
                            Role = "Customer"
                        });
                });

            modelBuilder.Entity("GenreMovie", b =>
                {
                    b.HasOne("H3Project.Data.Models.Genre", null)
                        .WithMany()
                        .HasForeignKey("GenresId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("H3Project.Data.Models.Movie", null)
                        .WithMany()
                        .HasForeignKey("MoviesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("H3Project.Data.Models.Schedule", b =>
                {
                    b.HasOne("H3Project.Data.Models.Movie", "Movie")
                        .WithMany("Schedules")
                        .HasForeignKey("MovieId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("H3Project.Data.Models.Theater", "Theater")
                        .WithMany("Schedules")
                        .HasForeignKey("TheaterId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Movie");

                    b.Navigation("Theater");
                });

            modelBuilder.Entity("H3Project.Data.Models.Seat", b =>
                {
                    b.HasOne("H3Project.Data.Models.Theater", "Theater")
                        .WithMany("Seats")
                        .HasForeignKey("TheaterId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Theater");
                });

            modelBuilder.Entity("H3Project.Data.Models.Theater", b =>
                {
                    b.HasOne("H3Project.Data.Models.Cinema", "Cinema")
                        .WithMany("Theaters")
                        .HasForeignKey("CinemaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cinema");
                });

            modelBuilder.Entity("H3Project.Data.Models.Ticket", b =>
                {
                    b.HasOne("H3Project.Data.Models.Schedule", "Schedule")
                        .WithMany()
                        .HasForeignKey("ScheduleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("H3Project.Data.Models.Seat", "Seat")
                        .WithMany()
                        .HasForeignKey("SeatId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("H3Project.Data.Models.User", "User")
                        .WithMany("Tickets")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Schedule");

                    b.Navigation("Seat");

                    b.Navigation("User");
                });

            modelBuilder.Entity("H3Project.Data.Models.User", b =>
                {
                    b.HasOne("H3Project.Data.Models.UserRole", "UserRole")
                        .WithMany()
                        .HasForeignKey("UserRoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("UserRole");
                });

            modelBuilder.Entity("H3Project.Data.Models.Cinema", b =>
                {
                    b.Navigation("Theaters");
                });

            modelBuilder.Entity("H3Project.Data.Models.Movie", b =>
                {
                    b.Navigation("Schedules");
                });

            modelBuilder.Entity("H3Project.Data.Models.Theater", b =>
                {
                    b.Navigation("Schedules");

                    b.Navigation("Seats");
                });

            modelBuilder.Entity("H3Project.Data.Models.User", b =>
                {
                    b.Navigation("Tickets");
                });
#pragma warning restore 612, 618
        }
    }
}
